<?php

namespace MetaSyntactical\Symfony\Tests\Component\HttpFoundation\File\MimeType;

use MetaSyntactical\Symfony\Component\HttpFoundation\File\MimeType\PhpMimeTypeGuesser;
use PHPUnit\Framework\TestCase;
use Symfony\Component\Mime\Exception\InvalidArgumentException;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-08-29 at 21:22:39.
 */
class PhpMimeTypeGuesserTest extends TestCase
{
    /**
     * @var PhpMimeTypeGuesser
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp(): void
    {
        $this->object = new PhpMimeTypeGuesser;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown(): void
    {
    }

    /**
     * @covers MetaSyntactical\Symfony\Component\HttpFoundation\File\MimeType\PhpMimeTypeGuesser::isSupported
     */
    public function testGuesserIsSupported(): void
    {
        self::assertTrue((new PhpMimeTypeGuesser)->isGuesserSupported());
    }

    /**
     * @covers MetaSyntactical\Symfony\Component\HttpFoundation\File\MimeType\PhpMimeTypeGuesser::guess
     */
    public function testGuessingMimeTypeReturnsExpectedType(): void
    {
        $guess = $this->object->guessMimeType(__DIR__ . '/_Data/Fireworks_Australia_Day_11_-_2_(Public_Domain).jpg');
        self::assertEquals('image/jpeg', $guess);
    }

    /**
     * @covers MetaSyntactical\Symfony\Component\HttpFoundation\File\MimeType\PhpMimeTypeGuesser::guess
     */
    public function testGuessingMimeTypeOfNonExistingFileResultsInException(): void
    {
        $this->expectException(InvalidArgumentException::class);
        $this->expectExceptionMessage('file does not exist');

        $this->object->guessMimeType(__DIR__ . '/_Data/NonExisting.jpg');
    }
}
